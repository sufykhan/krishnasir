[{"E:\\Working_Project\\krishnafood\\client\\src\\index.js":"1","E:\\Working_Project\\krishnafood\\client\\src\\App.js":"2","E:\\Working_Project\\krishnafood\\client\\src\\components\\Header.js":"3","E:\\Working_Project\\krishnafood\\client\\src\\components\\Footer.js":"4","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Mainlogin.js":"5","E:\\Working_Project\\krishnafood\\client\\src\\components\\FormContainer.js":"6","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\AdminScreen.js":"7","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Dish.js":"8","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Order.js":"9","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor.js":"10","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer.js":"11","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\CustomerScreen.js":"12","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Customer\\DishItem.js":"13","E:\\Working_Project\\krishnafood\\client\\src\\components\\CustomerHeader.js":"14","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\CartScreen.js":"15","E:\\Working_Project\\krishnafood\\client\\src\\productData.js":"16","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\OrderDynamicPage.js":"17","E:\\Working_Project\\krishnafood\\client\\src\\store.js":"18","E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\productReducers.js":"19","E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\cartReducers.js":"20","E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\productConstants.js":"21","E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\cartConstants.js":"22","E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\productActions.js":"23","E:\\Working_Project\\krishnafood\\client\\src\\components\\Loader.js":"24","E:\\Working_Project\\krishnafood\\client\\src\\components\\Message.js":"25","E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\cartActions.js":"26","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\VendorPage.js":"27","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\UpdateDish.js":"28","E:\\Working_Project\\krishnafood\\client\\src\\components\\TotalWindow.js":"29","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\DeleteProductVendor.js":"30","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\NewProduct.js":"31","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\AddVendor.js":"32","E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\vendorReducers.js":"33","E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\customerReducers.js":"34","E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\customerConstants.js":"35","E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\vendorConstants.js":"36","E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\vendorActions.js":"37","E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\customerActions.js":"38","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor\\AddVendor.js":"39","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer\\AddCustomer.js":"40","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor\\DeleteVendor.js":"41","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer\\DeleteCustomer.js":"42","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor\\UpdateVendor.js":"43","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer\\UpdateCustomer.js":"44","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Success.js":"45"},{"size":388,"mtime":1609154322083,"results":"46","hashOfConfig":"47"},{"size":3337,"mtime":1610028326251,"results":"48","hashOfConfig":"47"},{"size":836,"mtime":1609334479954,"results":"49","hashOfConfig":"47"},{"size":340,"mtime":1609415707921,"results":"50","hashOfConfig":"47"},{"size":6988,"mtime":1610018901177,"results":"51","hashOfConfig":"47"},{"size":347,"mtime":1609427889873,"results":"52","hashOfConfig":"47"},{"size":1030,"mtime":1609414931987,"results":"53","hashOfConfig":"47"},{"size":1547,"mtime":1609216045572,"results":"54","hashOfConfig":"47"},{"size":3080,"mtime":1610029721484,"results":"55","hashOfConfig":"47"},{"size":4753,"mtime":1609400064567,"results":"56","hashOfConfig":"47"},{"size":6975,"mtime":1609402148303,"results":"57","hashOfConfig":"47"},{"size":2897,"mtime":1609415686526,"results":"58","hashOfConfig":"47"},{"size":2963,"mtime":1609223916651,"results":"59","hashOfConfig":"47"},{"size":955,"mtime":1609414538039,"results":"60","hashOfConfig":"47"},{"size":4429,"mtime":1610024884161,"results":"61","hashOfConfig":"47"},{"size":749,"mtime":1609148467706,"results":"62","hashOfConfig":"47"},{"size":1524,"mtime":1610028285950,"results":"63","hashOfConfig":"47"},{"size":1258,"mtime":1610026137155,"results":"64","hashOfConfig":"47"},{"size":1327,"mtime":1609320216515,"results":"65","hashOfConfig":"47"},{"size":1994,"mtime":1610029305995,"results":"66","hashOfConfig":"47"},{"size":490,"mtime":1609319363396,"results":"67","hashOfConfig":"47"},{"size":422,"mtime":1610028561048,"results":"68","hashOfConfig":"47"},{"size":2181,"mtime":1610024162205,"results":"69","hashOfConfig":"47"},{"size":241,"mtime":1609074465571,"results":"70","hashOfConfig":"47"},{"size":265,"mtime":1609074465573,"results":"71","hashOfConfig":"47"},{"size":2240,"mtime":1610029104606,"results":"72","hashOfConfig":"47"},{"size":4484,"mtime":1609335942368,"results":"73","hashOfConfig":"47"},{"size":3032,"mtime":1609327914092,"results":"74","hashOfConfig":"47"},{"size":456,"mtime":1609414947752,"results":"75","hashOfConfig":"47"},{"size":2668,"mtime":1609328091042,"results":"76","hashOfConfig":"47"},{"size":2258,"mtime":1609327904370,"results":"77","hashOfConfig":"47"},{"size":2550,"mtime":1609391981370,"results":"78","hashOfConfig":"47"},{"size":1303,"mtime":1609352767185,"results":"79","hashOfConfig":"47"},{"size":1359,"mtime":1609352791666,"results":"80","hashOfConfig":"47"},{"size":512,"mtime":1609351374222,"results":"81","hashOfConfig":"47"},{"size":476,"mtime":1609351410065,"results":"82","hashOfConfig":"47"},{"size":2184,"mtime":1609401463473,"results":"83","hashOfConfig":"47"},{"size":2262,"mtime":1610024173196,"results":"84","hashOfConfig":"47"},{"size":2012,"mtime":1609394478068,"results":"85","hashOfConfig":"47"},{"size":2060,"mtime":1609394467809,"results":"86","hashOfConfig":"47"},{"size":1701,"mtime":1609397783199,"results":"87","hashOfConfig":"47"},{"size":1698,"mtime":1609398204379,"results":"88","hashOfConfig":"47"},{"size":3245,"mtime":1609401697751,"results":"89","hashOfConfig":"47"},{"size":3309,"mtime":1609402116679,"results":"90","hashOfConfig":"47"},{"size":569,"mtime":1610025184343,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1ss36uq",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"E:\\Working_Project\\krishnafood\\client\\src\\index.js",[],["195","196"],"E:\\Working_Project\\krishnafood\\client\\src\\App.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\Header.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\Footer.js",["197","198","199"],"import React from \"react\";\r\nimport { Container, Row ,Col} from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      {/* <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Krishna</Col>\r\n        </Row>\r\n      </Container> */}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Mainlogin.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\FormContainer.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\AdminScreen.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Dish.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Order.js",["200","201"],"import React, { useEffect, useState } from \"react\";\r\nimport {  Button, Container, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Header from \"../../components/Header\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { listOrders,deleteOrder} from \"../../redux/actions/cartActions\";\r\n\r\nconst Order = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orderList= useSelector(state => state.orderList)\r\n  const {loading,error,orders}=orderList;\r\n  const history=useHistory();\r\n\r\n  const [show,setShow]=useState(false);\r\n  const [Idd,setIdd]=useState(null);\r\n  // console.log(products)\r\n  useEffect(() => {\r\n    dispatch(listOrders())\r\n    if(Idd){\r\n      dispatch(deleteOrder(Idd))\r\n      history.push(\"/admin/orders\")\r\n    }\r\n  }, [dispatch,Idd])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"py-3\" style={{background:\"#c6e7dc\"}}>\r\n        <Container>\r\n          <Link to=\"/admin\" className=\"btn btn-light my-3\">\r\n            Back\r\n          </Link>\r\n          <h3>Orders List</h3>\r\n        {loading?<Loader/>:(\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>OrderId</th>\r\n                <th>Customer Name</th>\r\n                <th>Total Amount</th>\r\n                <th>Order Date</th>\r\n                <th>Reject Order</th>\r\n                <th>{show?\"Hide Details\":\"Show Details\"}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {orders.map((order)=>{\r\n              return (\r\n            <>\r\n                <tr>\r\n                  <th>{order._id}</th>\r\n                  <th>{order.customerName?order.customerName:order.customer}</th>\r\n                  <th>Rs {order.cartItems.reduce((acc,item)=>acc+Number(item.qty)* Number(item.pri),0).toFixed(2)}</th>\r\n                  <th>{order.createdAt}</th>\r\n                  <th><Button variant=\"danger\" onClick={()=>setIdd(order._id)}>Reject</Button></th>\r\n                  <th><div className=\"btn btn-dark\" onClick={()=>setShow(!show)}>{show?\"Hide Details\":\"Show Details\"}</div></th>\r\n                </tr>\r\n                {show?\r\n                  <Table striped bordered hover responsive style={{background:\"aliceblue\"}}>\r\n  <thead>\r\n    <tr style={{fontWeight:\"500\"}}>\r\n      <th>Dish</th>\r\n      <th>Vendor</th>\r\n      <th>Quantity</th>\r\n      <th>Unit Price</th>\r\n      <th>Total Price</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {order.cartItems.map(({calories,image,name,pri,product,qty,selectedvendor},index)=>\r\n  <tr>\r\n      <td>{name}</td>\r\n      <td>{selectedvendor}</td>\r\n      <td>{qty}</td>\r\n      <td>{pri}</td>\r\n      <td>{Number(pri*qty)}</td>\r\n    </tr>\r\n  )}\r\n  </tbody>\r\n</Table>:<></>}\r\n            </> \r\n              ) \r\n            })}\r\n              \r\n            </tbody>\r\n          </Table>\r\n        )}\r\n          \r\n\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor.js",["202"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Header from \"../../components/Header\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { listVendors } from \"../../redux/actions/vendorActions\";\r\n\r\nconst Vendor = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const vendorList = useSelector((state) => state.vendorList);\r\n  const { loading, error, vendors } = vendorList;\r\n  \r\n  \r\n  useEffect(() => {\r\n    dispatch(listVendors());\r\n  }, [dispatch]);\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [vendorName, setVendorName] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n\r\n  const SubmitVendor = (e) => {\r\n    e.preventDefault();\r\n    if(vendors.find((vendor)=>vendor.name.toLowerCase()===vendorName.toLowerCase())){\r\n      setMessage(\"Vendor Already Exists\")\r\n      setShow(false)\r\n    }\r\n    else{\r\n    history.push(`/admin/vendor/add/${vendorName}`)\r\n    }\r\n    //console.log(dishName)\r\n    // const d = vendors.find(\r\n    //   ({ name }) => name.toLowerCase() === vendorName.toLowerCase()\r\n    // );\r\n    // if (!d) {\r\n    //   history.push(`/vendor/new/${id}?vendor=${vendorName}`);\r\n    // } else {\r\n    //   if (\r\n    //     datas.find(\r\n    //       ([{ name }, indice]) => name.toLowerCase() === dishName.toLowerCase()\r\n    //     )\r\n    //   ) {\r\n    //     setMessage(\"Already Added\");\r\n    //     setShow(false);\r\n    //   } else {\r\n    //     history.push(`/vendor/add/${id}?dish=${dishName}`);\r\n    //   }\r\n    // }\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"py-3\" style={{ background: \"#c6e7dc\" }}>\r\n        <Container>\r\n        <Link to=\"/admin\" className=\"btn btn-info my-3\">\r\n            Back\r\n           </Link>\r\n           <hr/>\r\n           <br/>\r\n          <Row>\r\n            <Col md={8}>\r\n              <h5>VENDOR LIST</h5>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Button\r\n                variant=\"success\"\r\n                style={{ float: \"right\" }}\r\n                onClick={() => setShow(true)}\r\n              >\r\n                ADD A VENDOR\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <br />\r\n          <br />\r\n          {message ? (\r\n            show ? (\r\n              <></>\r\n            ) : (\r\n              <Alert variant=\"warning\">{message}</Alert>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {show && (\r\n            <Form onSubmit={SubmitVendor}>\r\n              <Row>\r\n                <Col md={8}>\r\n                  <Form.Control\r\n                    onChange={(e) => setVendorName(e.target.value)}\r\n                    placeholder=\"Enter Vendor Name\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Button type=\"submit\" variant=\"info\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n          <br />\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Vendor Name</th>\r\n                <th>Phone</th>\r\n                <th>Address</th>\r\n                <th>Email</th>\r\n                <th>Update</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              {loading?(<Loader/>):error?(<Alert variant=\"danger\">{error}</Alert>):vendors.map(({ name, phone, _id,email,address }) => {\r\n                return (\r\n                  <tr key={_id}>\r\n                    {\" \"}\r\n                    <td>{name}</td>\r\n                    <td>{phone}</td>\r\n                    <td>{address}</td>\r\n                    <td>{email}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={`/admin/vendor/update/${_id}`}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        Update\r\n                      </Link>\r\n                    </td>\r\n                    <td>\r\n                      <Link\r\n                        to={`/admin/vendor/delete/${_id}?vendor=${name}`}\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        Delete\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Vendor;","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\CustomerScreen.js",["203"],"import React,{useEffect, useState} from \"react\";\r\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Footer from \"../components/Footer\";\r\nimport CustomerHeader from \"../components/CustomerHeader\";\r\nimport DishItem from \"./Customer/DishItem\";\r\n// import productData from \"../productData\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../redux/actions/productActions\";\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport { listVendors } from \"../redux/actions/vendorActions\";\r\n\r\nconst CustomerScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const productList= useSelector(state => state.productList)\r\n  const {loading,error,products}=productList;\r\n\r\n  const vendorList = useSelector((state) => state.vendorList);\r\n  const { vendors} = vendorList;\r\n\r\n\r\n  // console.log(products)\r\n  useEffect(() => {\r\n    dispatch(listVendors());\r\n    dispatch(listProducts())\r\n  }, [dispatch])\r\n\r\n  const [searchItem,setItem]=useState(\"Select the Dish\")\r\n  const [vendor,setVendor]=useState(\"Filter with Vendors\")\r\n  \r\n   const filterItem=()=>{\r\n    const filterData=products.filter((product)=>(  product.name.toLowerCase().includes(searchItem.toLowerCase()) ||searchItem===\"Select the Dish\" ))\r\n     .filter((product)=>(product.vendors.find(e=>e===vendor) || vendor===\"Filter with Vendors\"));\r\n      // console.log(filterData)\r\n    const data= filterData.map((product,index)=>{\r\n      return (<DishItem product={product}/>)\r\n    })\r\n    return data;\r\n   }\r\n\r\n  return (\r\n    <>\r\n      <CustomerHeader />\r\n      <main className=\"py-3\" style={{background:\"#ddd\"}}>\r\n      {loading ?(<Loader/>):error?(<Message va=\"danger\" err={error}/>):\r\n        <Container>\r\n          <Row>\r\n            <Col md={7}>\r\n              {/* <Form.Control type=\"text\" placeholder=\"Search Dishes\" onChange={(e)=>setSearch(e.target.value)}/> */}\r\n              <Form.Control as=\"select\" value={searchItem} defaultValue=\"Choose...\" onChange={(e)=>setItem(e.target.value)}>\r\n                <option>Select the Dish</option>\r\n                {products.map((value,index)=><option key={index+1}>{value.name}</option>)}\r\n              </Form.Control>\r\n            </Col>\r\n            {/* <Col md={2}>\r\n              <div className=\"btn-info btn\" onClick={()=>setItem(search)}>Search</div>\r\n            </Col> */}\r\n            <Col md={5}>\r\n              <Form.Control as=\"select\" value={vendor} defaultValue=\"Choose...\" onChange={(e)=>setVendor(e.target.value)}>\r\n                <option>Filter with Vendors</option>\r\n                {vendors.map((ven)=><option>{ven.name}</option>)}\r\n              </Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n           {filterItem()}\r\n          </Row>\r\n        </Container>\r\n      }\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerScreen;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Customer\\DishItem.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\CustomerHeader.js",["204"],"import React from \"react\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CustomerHeader = () => {\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/customer\">\r\n            <Navbar.Brand href=\"/customer\">Easy Restaurant</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n             \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerHeader;\r\n\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\CartScreen.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\productData.js",[],["205","206"],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\OrderDynamicPage.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\store.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\productReducers.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\cartReducers.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\productConstants.js",[],["207","208"],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\cartConstants.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\productActions.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\Loader.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\Message.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\cartActions.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\VendorPage.js",["209","210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Col, Container, Form, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Header from \"../../components/Header\";\r\nimport { listProducts } from \"../../redux/actions/productActions\";\r\n\r\nconst VendorDynamic = () => {\r\n  let { id } = useParams();\r\n  const history=useHistory()\r\nconst dispatch = useDispatch()\r\nconst productList = useSelector(state => state.productList)\r\nconst {loading,error,products}=productList;\r\nconst [datas,setDatas]=useState([])\r\nuseEffect(() => {\r\n   dispatch(listProducts())\r\n}, [dispatch])\r\n\r\nconst listByVendor=()=>{\r\n    let arr=[];\r\n    //const filtered=products.filter(({vendors})=>vendors.find((vendor)=>vendor==={id}))\r\n    for(let i=0;i<products.length;i++){\r\n      for(let j=0;j<products[i].vendors.length;j++)\r\n      {\r\n        if(products[i].vendors[j]===id){\r\n            arr.push([products[i],j])\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n    // const lists=arr.map(([{name,price},indice],index)=>{\r\n    //     <tr>\r\n    //             <td>{index+1}</td>\r\n    //             <td>{name}</td>\r\n    //             <td>{price[indice]}</td>\r\n    //             <td><Link to={`/vendor/${id}?index=${indice}&todo=update`} className=\"btn btn-light\">Update</Link></td>\r\n    //             <td><Link to={`/vendor/${id}?index=${indice}&todo=delete`} className=\"btn btn-light\">Delete</Link></td>\r\n    //     </tr>        \r\n    // })\r\n    // return lists\r\n    \r\n}\r\nuseEffect(() => {\r\n    const values=(listByVendor())\r\n    if(values.length>0){\r\n    setDatas(values)\r\n    }\r\n}, [products])\r\n\r\n\r\nconst [show,setShow]=useState(false)\r\nconst [dishName,setDishName]=useState(\"\");\r\nconst [message,setMessage]=useState();\r\n\r\nconst SubmitDish=(e)=>{\r\n  e.preventDefault()\r\n  //console.log(dishName)\r\n  const d=products.find(({name})=>(name.toLowerCase()===dishName.toLowerCase()))\r\n  if(!d)\r\n  {\r\n    history.push(`/vendor/new/${id}?dish=${dishName}`)\r\n  }\r\n  else{\r\n    if(datas.find(([{name},indice])=>name.toLowerCase()===dishName.toLowerCase())){\r\n     setMessage(\"Already Added\");\r\n     setShow(false)\r\n    }\r\n    else{\r\n      history.push(`/vendor/add/${id}?dish=${dishName}`)\r\n    }\r\n  }\r\n \r\n}\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"py-3\" style={{ background:\"#c6e7dc\"}}>\r\n        <Container>\r\n        <Row><Col md={8} ><h5>VENDOR DISH LIST</h5></Col><Col md={4} ><Button variant=\"success\" style={{float:\"right\"}} onClick={()=>setShow(true)}>ADD A DISH</Button></Col></Row>\r\n        \r\n        <br/>\r\n        <br/>\r\n        {(message)?(show?<></>:<Alert variant=\"warning\">{message}</Alert>):<></>}\r\n        {show && <Form onSubmit={SubmitDish}><Row><Col md={8}><Form.Control onChange={(e)=>setDishName(e.target.value)} placeholder=\"Enter Dish Name\" /></Col><Col><Button type=\"submit\" variant=\"info\">Submit</Button></Col></Row></Form>}\r\n       <br/>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>{id}</th>\r\n                <th>Dish</th>\r\n                <th>Unit Price</th>\r\n                <th>Update</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* here will be the vendoe data after checkput */}\r\n              {/* {datas.map(([{name,price},indice],index)=>{\r\n        <tr>\r\n                <td>{index+1}</td>\r\n                <td>{name}</td>\r\n                <td>{price[indice]}</td>\r\n                <td><Link to={`/vendor/${id}?index=${indice}&todo=update`} className=\"btn btn-light\">Update</Link></td>\r\n                <td><Link to={`/vendor/${id}?index=${indice}&todo=delete`} className=\"btn btn-light\">Delete</Link></td>\r\n        </tr>        \r\n    })} */}\r\n    {datas.map(([{name,price,_id},value],index)=>{return (<tr> <td>{index+1}</td>\r\n                <td>{name}</td>\r\n                <td>{price[value]}</td>\r\n                <td><Link to={`/vendor/update/${id}?id=${_id}&index=${value}&dish=${name}`} className=\"btn btn-primary\">Update</Link></td>\r\n                <td><Link to={`/vendor/delete/${id}?id=${_id}&index=${value}&dish=${name}`} className=\"btn btn-danger\">Delete</Link></td></tr>)})}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VendorDynamic;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\UpdateDish.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\components\\TotalWindow.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\DeleteProductVendor.js",["212"],"import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Card, Form, FormControl } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport TotalWindow from \"../../components/TotalWindow\";\r\nimport { listProducts, updateProducts,deleteProduct} from \"../../redux/actions/productActions\";\r\n\r\nconst DeleteDish = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n     }, [dispatch])\r\n  \r\n  const productList = useSelector((state) => state.productList);\r\n  const {products}=productList\r\n  \r\n  const history=useHistory()\r\n  const {id}=useParams();\r\n  const location=useLocation();\r\n  const valueId = location.search ? ((location.search.split(\"&\")[0]).split(\"=\")[1]) : \"\";\r\n  const  indice= location.search ? Number((location.search.split(\"&\")[1]).split(\"=\")[1]) : 0;\r\n  const dish = location.search ? ((location.search.split(\"&\")[2]).split(\"=\")[1]) : \"\";\r\n\r\n  \r\n  \r\n  const SubmitHandler = (e) => {\r\n      e.preventDefault();\r\n      const targetProduct=products.find((product)=>product._id===valueId)\r\n      if(targetProduct && targetProduct.vendors.length>1){\r\n\r\n        const check=targetProduct.vendors[indice];\r\n        const newUpdate=targetProduct.vendors.filter((vendor)=>vendor!==check)\r\n        const target={...targetProduct,vendors:newUpdate,price:targetProduct.price.filter((pri)=>pri!==targetProduct.price[indice])}\r\n        dispatch(updateProducts(valueId,target))\r\n        history.push(`/vendor/${id}`)\r\n        }\r\n      else if (targetProduct.vendors.length===1)\r\n      {\r\n          dispatch(deleteProduct(valueId))\r\n          history.push(`/vendor/${id}`)\r\n      }  \r\n      \r\n    };\r\n\r\n  return (\r\n      <TotalWindow>\r\n    <Card\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        right:\"25%\",\r\n        boxShadow: \"2px 8px 10px #ddd\",\r\n        width:\"50%\"\r\n      }}\r\n    >\r\n      <Card.Header>Remove the {dish} </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={SubmitHandler}>\r\n          <Form.Group>\r\n            <FormControl type=\"text\" placeholder={dish} readOnly />\r\n          </Form.Group>\r\n          <Form.Group>\r\n           <Alert variant=\"warning\">Are you sure you want to Delete</Alert>\r\n          </Form.Group>\r\n          <div style={{ textAlign:\"center\" }}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outline-danger\"\r\n            \r\n          >\r\n            Remove\r\n          </Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n    </TotalWindow>\r\n  );\r\n};\r\n\r\nexport default DeleteDish;","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\NewProduct.js",["213"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Form, FormControl } from \"react-bootstrap\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport TotalWindow from \"../../components/TotalWindow\";\r\nimport { createProduct } from \"../../redux/actions/productActions\";\r\n\r\nimport FileBase from \"react-file-base64\"\r\n\r\nconst Dish = () => {\r\n    const dispatch = useDispatch()\r\n  const history=useHistory()\r\n  const {id}=useParams();\r\n  const location=useLocation();\r\n  const dishName = location.search ? ((location.search.split(\"&\")[0]).split(\"=\")[1]) : \"\";\r\n\r\n\r\n  const SubmitHandler = (e) => {\r\n      e.preventDefault();\r\n     console.log(postData)\r\n     dispatch(createProduct(postData))\r\n     history.push(`/vendor/${id}`)\r\n      \r\n    };\r\n\r\n    const [postData, setPostData] = useState({name:dishName,calories:\"\",image:\"\",price:[],vendors:[id]})\r\n\r\n  return (\r\n      <TotalWindow>\r\n    <Card\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        right:\"25%\",\r\n        boxShadow: \"2px 8px 10px #ddd\",\r\n        width:\"50%\"\r\n      }}\r\n    >\r\n      <Card.Header>Create the {postData.name}</Card.Header>\r\n      <Card.Body>\r\n        \r\n      <Form onSubmit={SubmitHandler}>\r\n        <Form.Group><FormControl type=\"text\" placeholder=\"Dish\" value={postData.name} readOnly/></Form.Group>\r\n            <Form.Group><FormControl type=\"text\" placeholder=\"Calories\" value={postData.calories} onChange={(e)=>setPostData({...postData,calories:e.target.value})}/></Form.Group>\r\n            <Form.Group><FormControl type=\"text\" placeholder=\"Vendor\" value={postData.vendors[0]} readOnly/></Form.Group>   \r\n            <Form.Group><FormControl type=\"text\" placeholder=\"Price\" value={postData.price} onChange={(e)=>setPostData({...postData,price:[e.target.value]})}/></Form.Group>\r\n            <Form.Group>\r\n           <FileBase  type=\"file\" multiple={false} onDone={({base64})=>setPostData({...postData,image:base64})}/>\r\n            </Form.Group>     \r\n            <Button type=\"submit\" variant=\"outline-primary\" style={{float:\"right\"}} >Submit</Button>\r\n        </Form>\r\n\r\n      </Card.Body>\r\n    </Card>\r\n    </TotalWindow>\r\n  );\r\n};\r\n\r\nexport default Dish;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Vendor\\AddVendor.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\vendorReducers.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\reducers\\customerReducers.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\customerConstants.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\constants\\vendorConstants.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\vendorActions.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\redux\\actions\\customerActions.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor\\AddVendor.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer\\AddCustomer.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor\\DeleteVendor.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer\\DeleteCustomer.js",[],"E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Vendor\\UpdateVendor.js",["214"],"import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Card, Form, FormControl } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport TotalWindow from \"../../../components/TotalWindow\";\r\nimport {\r\n  updateVendors,\r\n  listVendors,\r\n} from \"../../../redux/actions/vendorActions\";\r\n\r\nconst UpdateVendor = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const vendorList = useSelector((state) => state.vendorList);\r\n  const { loading, error, vendors } = vendorList;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listVendors());\r\n    const filterVendor = vendors.find((vendor) => vendor._id === id);\r\n    setVendorData(filterVendor)\r\n  }, [dispatch]);\r\n\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(vendorData);\r\n    dispatch(updateVendors(id,vendorData))\r\n    history.push(`/admin/vendors`)\r\n  };\r\n\r\n  const [vendorData, setVendorData] = useState({\r\n    name: \"\",\r\n    phone:\"\",\r\n    address: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  return (\r\n    <TotalWindow>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      ) : (\r\n        <Card\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"25%\",\r\n            right: \"25%\",\r\n            boxShadow: \"2px 8px 10px #ddd\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <Card.Header>Update the Vendor: {vendorData.name}</Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={SubmitHandler}>\r\n              <Form.Group>\r\n                <FormControl type=\"text\" value={vendorData.name} readOnly />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Phone Number\"\r\n                  value={vendorData.phone}\r\n                  onChange={(e) =>\r\n                    setVendorData({ ...vendorData, phone: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  value={vendorData.address}\r\n                  onChange={(e) =>\r\n                    setVendorData({ ...vendorData, address: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <FormControl\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={vendorData.email}\r\n                  onChange={(e) =>\r\n                    setVendorData({ ...vendorData, email: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outline-primary\"\r\n                style={{ float: \"right\" }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </TotalWindow>\r\n  );\r\n};\r\n\r\nexport default UpdateVendor;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Admin\\Customer\\UpdateCustomer.js",["215"],"import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Card, Form, FormControl } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport TotalWindow from \"../../../components/TotalWindow\";\r\nimport {\r\n  updateCustomers,\r\n  listCustomers,\r\n} from \"../../../redux/actions/customerActions\";\r\n\r\nconst UpdateVendor = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const customerList = useSelector((state) => state.customerList);\r\n  const { loading, error, customers } = customerList;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listCustomers());\r\n    const filterCustomer = customers.find((customer) => customer._id === id);\r\n    setCustomerData(filterCustomer)\r\n  }, [dispatch]);\r\n\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    //console.log(vendorData);\r\n    dispatch(updateCustomers(id,customerData))\r\n    history.push(`/admin/customers`)\r\n  };\r\n\r\n  const [customerData, setCustomerData] = useState({\r\n    name: \"\",\r\n    phone:\"\",\r\n    address: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  return (\r\n    <TotalWindow>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      ) : (\r\n        <Card\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"25%\",\r\n            right: \"25%\",\r\n            boxShadow: \"2px 8px 10px #ddd\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <Card.Header>Update the Customer: {customerData.name}</Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={SubmitHandler}>\r\n              <Form.Group>\r\n                <FormControl type=\"text\" value={customerData.name} readOnly />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Phone Number\"\r\n                  value={customerData.phone}\r\n                  onChange={(e) =>\r\n                    setCustomerData({ ...customerData, phone: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  value={customerData.address}\r\n                  onChange={(e) =>\r\n                    setCustomerData({ ...customerData, address: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <FormControl\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={customerData.email}\r\n                  onChange={(e) =>\r\n                    setCustomerData({ ...customerData, email: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outline-primary\"\r\n                style={{ float: \"right\" }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </TotalWindow>\r\n  );\r\n};\r\n\r\nexport default UpdateVendor;\r\n","E:\\Working_Project\\krishnafood\\client\\src\\Screens\\Success.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":19},{"ruleId":"220","severity":1,"message":"224","line":2,"column":21,"nodeType":"222","messageId":"223","endLine":2,"endColumn":24},{"ruleId":"220","severity":1,"message":"225","line":2,"column":26,"nodeType":"222","messageId":"223","endLine":2,"endColumn":29},{"ruleId":"220","severity":1,"message":"226","line":14,"column":18,"nodeType":"222","messageId":"223","endLine":14,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":26,"column":6,"nodeType":"229","endLine":26,"endColumn":20,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":12,"column":28,"nodeType":"222","messageId":"223","endLine":12,"endColumn":37},{"ruleId":"220","severity":1,"message":"232","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"233","line":2,"column":34,"nodeType":"222","messageId":"223","endLine":2,"endColumn":45},{"ruleId":"216","replacedBy":"234"},{"ruleId":"218","replacedBy":"235"},{"ruleId":"216","replacedBy":"236"},{"ruleId":"218","replacedBy":"237"},{"ruleId":"220","severity":1,"message":"238","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":15},{"ruleId":"220","severity":1,"message":"226","line":14,"column":16,"nodeType":"222","messageId":"223","endLine":14,"endColumn":21},{"ruleId":"227","severity":1,"message":"239","line":49,"column":4,"nodeType":"229","endLine":49,"endColumn":14,"suggestions":"240"},{"ruleId":"220","severity":1,"message":"241","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"242","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"243","line":25,"column":6,"nodeType":"229","endLine":25,"endColumn":16,"suggestions":"244"},{"ruleId":"227","severity":1,"message":"245","line":25,"column":6,"nodeType":"229","endLine":25,"endColumn":16,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'useParams' is defined but never used.","'Footer' is defined but never used.","'NavDropdown' is defined but never used.",["247"],["248"],["247"],["248"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listByVendor'. Either include it or remove the dependency array.",["250"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'vendors'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'customers' and 'id'. Either include them or remove the dependency array.",["252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [dispatch, Idd, history]",{"range":"261","text":"262"},"Update the dependencies array to be: [listByVendor, products]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, id, vendors]",{"range":"265","text":"266"},"Update the dependencies array to be: [customers, dispatch, id]",{"range":"267","text":"268"},[889,903],"[dispatch, Idd, history]",[1740,1750],"[listByVendor, products]",[858,868],"[dispatch, id, vendors]",[886,896],"[customers, dispatch, id]"]